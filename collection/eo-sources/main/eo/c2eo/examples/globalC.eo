+package c2eo.examples

+alias org.eolang.io.stdout
+alias org.eolang.txt.sprintf

+alias c2eo.ctypes.c_bool
+alias c2eo.ctypes.c_char
+alias c2eo.ctypes.c_float64
+alias c2eo.ctypes.c_int16
+alias c2eo.ctypes.c_int32
+alias c2eo.ctypes.c_int64

[] > globalC

  seq > @
    non_initialized
    stdout "\n"
    initialized

  c_bool > b_1
  c_char > c_1
  c_float64 > f64_1
  c_int16 > i16_1
  c_int32 > i32_1
  c_int64 > i64_1

  seq > non_initialized

    b_1.write 0
    c_1.write 'a'
    f64_1.write 3.1415
    i16_1.write 127
    i32_1.write 255
    i64_1.write 511

    stdout (sprintf "b_1 = %d\n" (b_1.as-int))
    stdout (sprintf "c_1 = %c\n" c_1)
    stdout (sprintf "f64_1 = %f\n" f64_1)
    stdout (sprintf "i16_1 = %d\n" i16_1)
    stdout (sprintf "i32_1 = %d\n" i32_1)
    stdout (sprintf "i64_1 = %d\n" i64_1)


  c_bool 100 > b_2
  c_char 'b' > c_2
  c_float64 3.1415 > f64_2
  c_int16 128 > i16_2
  c_int32 256 > i32_2
  c_int64 512 > i64_2

  seq > initialized
    stdout (sprintf "b_2 = %d\n" (b_2.as-int))
    stdout (sprintf "c_2 = %c\n" c_2)
    stdout (sprintf "f64_2 = %f\n" f64_2)
    stdout (sprintf "i16_2 = %d\n" i16_2)
    stdout (sprintf "i32_2 = %d\n" i32_2)
    stdout (sprintf "i64_2 = %d\n" i64_2)
