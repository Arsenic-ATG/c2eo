Eolang Compiler Implementation Issues
-------------------------------------

There are problems with the Eolang compilers that prevent efficient transformation realization. They are caused by both implementation errors and the absence of certain of the declared functions. It also makes sense to revise the semantics of a number of constructions. The following disadvantages can be noted, which I would like to get rid of in the near future. For clarity, a number of situations are modeled in the tests directory.

    1. There is no real support for creating a concrete objects in the external file namespace. Theese objects are compiled, but when they are accessed in the program, the system is interrupted. This does not allow directly imitating external variables of the C language. At the same time, in the common space and code, inside another object, these objects function. Demonstrated in test02.

    2. The syntactic problems of Eolang are that even internal names in many situations must be written only by small Latin letters and numbers (for example, attribute names). This can conflict with many compiled languages. For example, C allows uppercase letters and underscores. I d'd like to use more widely normal identifiers (as promised in the language description). It should be noted that the error appears during execution. The compilation is successful. Demonstrated in test07.

    3. The problem similar as previous one arise with names in aliases. I think we don't need this restriction on the local names. It is possible to organize a freer format for their use. The identification of this problem arises at compile time. But it is not clear from the description of the language: why such a restriction is needed. Demonstrated in test08.

    4. About while object. I have never been able to test it properly. Does it work or is it just a stub? Perhaps that is not how I am trying to implement...  Demonstrated in test09.


Проблемы, связанные с реализацией компиляторов Eolang
-----------------------------------------------------

Существуют проблемы, связанные с компиляторами Eolang, которые не позволяют эффективно проверять корректность трансформации. Они обусловлены как ошибками в реализации, так и отсутствием тех или иных из заявленных функций. Также имеет смысл пересмотреть семантику ряда конструкций. Можно отметить следующие недостатки, от которых хотелось бы избавиться в ближайшее время. Для пояснения ряд ситуаций промоделировано в каталоге примеров tests.

    1. Отсутствует реальная поддержка создания конкретных объектов во внешнем пространстве имен файла. Такие объекты проходят компиляцию, но при обращении к ним в программе происходит прерывание работы системы. Это не позволяет напрямую имитировать внешние переменные языка C. При этом в общем пространстве и кодом, внутри другого объекта данные объекты функционируют. Демонстрируется в test02.

    2. К синтаксическим проблемам можно отнести то, что даже внутренние имена во многих ситуациях приходится писать только маленьким латинскими буквами и цифрами (например, имена атрибутов). Это может войти в противоречие со многими языками при компиляции. В частности, в C допускаются большие буквы и подчеркивания. Хотелось, чтобы можно было (как обещано в описании языка) использовать более широко нормальные идентификаторы. Следует отметить, что ошибка проявляется во время запуска на выполнение. Компиляция проходит успешно. Демонстрируется в test07.

    3. Проблем, аналогичная предыдущей, возникает и с именами в алиасах. Спрашивается, зачем вводить ограничения на локальные по сути имена там, где можно организовать более свободный формат их использования. Идентификация этого, правда, возникает во время компиляции. Но из описания языка непонятно, зачем нужно подобное ограничение. Демонстрируется в test08.

    4. По поводу while. Мне так и не удалось его нормально протестировать. Он работает или только заглушка? Возможно, что не так пытаюсь реализовать…  Демонстрируется в test09.


